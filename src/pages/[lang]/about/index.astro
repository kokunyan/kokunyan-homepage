---
import Layout from '@layouts/Layout.astro'
import Born from './_translations/born.astro'
import KFU from './_translations/kfu.astro'
import KU from './_translations/ku.astro'
import Coding from './_translations/coding.astro'
import FirstWork from './_translations/firstWork.astro'
import SecondWork from './_translations/secondWork.astro'

export async function getStaticPaths() {
  const paths = ['en', 'ja', 'ru'].map((language) => {
    return { params: { lang: language } }
  })
  return paths
}
import { getLangFromUrl, useTranslations } from '@i18n/utils'
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<Layout
  pageTitle={t(`page.about`)}
  pageDescription={t(`description.about`)}
  pageType="profile"
>
  <div class="min-h-screen py-20 flex flex-col items-center">
    <div class="flex flex-col gap-5 w-[670px] max-w-full">
      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2>üê§ {t(`about.bornTitle`)}</h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.bornDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <Born lang={lang} />
        </div>
      </div>

      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2>üéì {t(`about.kfuTitle`)}</h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.kfuDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <KFU lang={lang} />
        </div>
      </div>

      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2>üáØüáµ {t(`about.kuTitle`)}</h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.kuDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <KU lang={lang} />
        </div>
      </div>

      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2>üë®‚Äçüíª {t(`about.codingTitle`)}</h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.codingDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <Coding lang={lang} />
        </div>
      </div>

      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2 class="flex items-center flex-row gap-4">
              <img
                style="max-width: 100%; height: auto;"
                width="15px"
                height="25px"
                src="/BM.svg"
              />
              <span>{t(`about.firstWorkTitle`)}</span>
            </h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.firstWorkDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <FirstWork lang={lang} />
        </div>
      </div>

      <div class="collapse collapse-arrow bg-primary text-black">
        <input type="radio" name="my-accordion-2" class="accordion-radio" />
        <div class="collapse-title text-xl font-medium">
          <div class="flex justify-between flex-wrap gap-y-2">
            <h2 class="flex items-center flex-row gap-2">
              <img class="max-w-[20px] max-h-[20px]" src="/CC.svg" />
              <span>{t(`about.secondWorkTitle`)}</span>
            </h2>
            <span class="opacity-50 text-sm sm:text-base"
              >{t(`about.secondWorkDate`)}</span
            >
          </div>
        </div>
        <div class="collapse-content">
          <SecondWork lang={lang} />
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .collapse {
    max-width: 100vw;
    overflow-x: hidden;
  }

  .collapse-content {
    max-height: 70vh;
    overflow-y: auto;

    @media (max-width: 767px) {
      max-height: 60vh;
      -webkit-overflow-scrolling: touch; /* Improve scroll on iOS */
    }
  }

  /* Fix potential Safari-specific flex issues */
  .flex {
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
  }

  .collapse-content > * {
    max-width: 100%;
    word-break: break-word;
    overflow-wrap: break-word;
  }

  .collapse-title {
    word-break: break-word;
  }

  @media (max-width: 640px) {
    .collapse-title h2 {
      width: 100%;
    }

    .collapse-title span {
      width: 100%;
    }
  }
</style>

<script>
  function scrollToCenter(element) {
    const elementRect = element.getBoundingClientRect()
    const absoluteElementTop = elementRect.top + window.pageYOffset
    const middle =
      absoluteElementTop - window.innerHeight / 2 + elementRect.height / 2
    window.scrollTo({
      top: middle,
      behavior: 'smooth',
    })
  }

  document.addEventListener('DOMContentLoaded', () => {
    const radios = document.querySelectorAll('.accordion-radio')

    radios.forEach((radio) => {
      radio.addEventListener('change', (e) => {
        if (e.target.checked) {
          const collapseElement = e.target.closest('.collapse')
          setTimeout(() => {
            scrollToCenter(collapseElement)
          }, 100)
        }
      })
    })
  })
</script>
